SELECT `PRODUCT CATEGORY` FROM SALES_DATA_2023;


ALTER TABLE SALES_DATA_2023 CHANGE COLUMN `PRODUCT CATEGORY`  PRODUCT_CATEGORY VARCHAR(200);
ALTER TABLE SALES_DATA_2023 CHANGE COLUMN `TRANSACTION ID`   TRANSACTION_ID INT;
ALTER TABLE SALES_DATA_2023 CHANGE COLUMN `PRODUCT NAME`  PRODUCT_NAME VARCHAR(200);
ALTER TABLE SALES_DATA_2023 CHANGE COLUMN `UNITS SOLD`  UNITS_SOLD INT;
ALTER TABLE SALES_DATA_2023 CHANGE COLUMN `UNIT PRICE`  UNIT_PRICE INT;
ALTER TABLE SALES_DATA_2023 CHANGE COLUMN `TOTAL REVENUE`  TOTAL_REVENUE DECIMAL(10,2);
ALTER TABLE SALES_DATA_2023 CHANGE COLUMN `PAYMENT METHOD` PAYMENT_METHOD VARCHAR(100);



-- BASIC LEVEL 

-- 1. Find the total revenue (Total Price) for each Category.

SELECT 
PRODUCT_CATEGORY,
SUM(TOTAL_REVENUE) AS TOTAL_REVENUE 
FROM SALES_DATA_2023 
GROUP BY PRODUCT_CATEGORY 
ORDER BY TOTAL_REVENUE DESC;

-- 2. Retrieve the Product Name and Quantity where the Quantity is greater than or equal to 10.

SELECT PRODUCT_NAME, 
SUM(UNITS_SOLD) AS TOTAL_QUANTITY 
FROM SALES_DATA_2023  
GROUP BY PRODUCT_NAME 
HAVING TOTAL_QUANTITY >=10;

-- 3. List all unique Regions where sales occurred.

SELECT 
DISTINCT REGION
FROM SALES_DATA_2023;

-- 4. Count the number of transactions for each Payment Method

SELECT PAYMENT_METHOD ,
COUNT(PAYMENT_METHOD) AS TOTAL_TRANSACTIONS
FROM SALES_DATA_2023
GROUP BY PAYMENT_METHOD;

-- INTERMEDIATE LEVEL

-- 1. Find the average Unit Price for each Category.

SELECT PRODUCT_CATEGORY ,AVG(UNIT_PRICE) AS AVERAGE_UNIT_PRICE
FROM SALES_DATA_2023
GROUP BY  PRODUCT_CATEGORY;

-- 2. Retrieve the Order ID, Product Name, and Total Price for transactions on a specific date (e.g., '2023-02-01').

SELECT TRANSACTION_ID,PRODUCT_NAME,
(UNITS_SOLD * UNIT_PRICE) AS TOTAL_PRICE
FROM SALES_DATA_2023 
WHERE DATE = '2023-02-01';

-- 3. Calculate the total revenue (Total Price) for each Region.

SELECT REGION ,SUM((UNITS_SOLD * UNIT_PRICE)) AS TOTAL_REVENUE 
FROM SALES_DATA_2023 
GROUP BY REGION;

-- 4. Get the top 5 products with the highest Total Price in the last month (EX: MARCH 2023)

SELECT PRODUCT_NAME,(UNITS_SOLD * UNIT_PRICE) AS TOTAL_REVENUE
FROM SALES_DATA_2023
WHERE MONTH(DATE) = 3
AND YEAR(DATE) = 2023
ORDER BY TOTAL_REVENUE DESC
LIMIT 5;

-- 5. Find the maximum Quantity sold for each Product Name.

SELECT PRODUCT_NAME, MAX(UNITS_SOLD)
FROM SALES_DATA_2023
GROUP BY PRODUCT_NAME;

-- 6. List Category and the average Total Price for each Category.

SELECT PRODUCT_CATEGORY, AVG(UNITS_SOLD * UNIT_PRICE) AS AVERAGE_TOTAL_PRICE
FROM  SALES_DATA_2023
GROUP BY PRODUCT_CATEGORY;

-- ADVANCE LEVEL

-- 1.Find the Product Name with the highest total revenue (Total Price) in each Region.

WITH REVENUE AS (
SELECT PRODUCT_NAME,REGION,(UNITS_SOLD * UNIT_PRICE) AS TOTAL_REVENUE
FROM SALES_DATA_2023
),
REGION AS (
SELECT REGION,MAX(TOTAL_REVENUE) AS MAX_REVENUE 
FROM REVENUE GROUP BY REGION
)
SELECT R.PRODUCT_NAME,R.REGION,R.TOTAL_REVENUE FROM REVENUE R JOIN REGION RE ON
 R.REGION = RE.REGION AND R.TOTAL_REVENUE = RE.MAX_REVENUE;



-- 2. Identify the top 3 Payment Methods by total revenue.

SELECT PAYMENT_METHOD ,SUM(UNITS_SOLD * UNIT_PRICE) AS TOTAL_REVENUE
FROM SALES_DATA_2023 
GROUP BY PAYMENT_METHOD 
ORDER BY TOTAL_REVENUE DESC 
LIMIT 3;


-- 3. Get the Region with the highest average Total Price per transaction.

SELECT REGION,
AVG(UNIT_PRICE) AS HIGHEST_AVG_TRANSACTION
FROM SALES_DATA_2023
GROUP BY REGION
ORDER BY HIGHEST_AVG_TRANSACTION DESC
LIMIT 1;

-- 4. Retrieve the total Quantity and Total Price for each Product Name sold in each Region.

SELECT PRODUCT_NAME,REGION,SUM(TOTAL_REVENUE) AS TOTAL_PRICE,SUM(UNITS_SOLD) AS TOTAL_QUANTITY
FROM sales_data_2023 
GROUP BY PRODUCT_NAME,REGION 
ORDER BY PRODUCT_NAME ;


-- 5. Find the date with the highest total revenue 
--    and list all transactions on that date.

WITH TOTAL_REVENUE AS (
SELECT `DATE`,MAX(TOTAL_REVENUE) AS TOTAL_REVENUE,TRANSACTION_ID
FROM SALES_DATA_2023
GROUP BY `DATE`,TRANSACTION_ID
ORDER BY TOTAL_REVENUE DESC
LIMIT 1
),
ALL_TRANSACTION AS (
SELECT TRANSACTION_ID,`DATE` FROM SALES_DATA_2023
WHERE DATE = (SELECT `DATE` FROM TOTAL_REVENUE)
)
SELECT TR.`DATE`,TR.TOTAL_REVENUE, AT.TRANSACTION_ID 
FROM TOTAL_REVENUE AS TR 
JOIN ALL_TRANSACTION AS AT 
ON TR.`DATE`=AT.`DATE`;


-- 6. Find the TOP 1 Order ID and Total Price for orders 
-- where the Total Price is higher than the average Total Price of all orders.

SELECT TRANSACTION_ID, TOTAL_REVENUE 
FROM SALES_DATA_2023 
WHERE TOTAL_REVENUE > (SELECT AVG(TOTAL_REVENUE) FROM SALES_DATA_2023)
ORDER BY TOTAL_REVENUE 
DESC LIMIT 3;


-- 7. Calculate the percentage contribution of each Category to the total revenue.

SELECT PRODUCT_Category,
SUM(TOTAL_REVENUE) AS category_total_revenue,
ROUND((SUM(TOTAL_REVENUE)/(SELECT SUM(TOTAL_REVENUE) FROM sales_data_2023) * 100),1) 
AS percentage_contribution
FROM sales_data_2023
GROUP BY PRODUCT_Category;

-- Retrive the region with most sales and their revenue
SELECT Region,SUM(units_sold) Total_Sales,
SUM(total_revenue) Total_Revenue 
FROM sales_data_2023
GROUP BY region 
ORDER BY Total_Sales DESC ;

-- TOTAL REVENUE
select sum(total_revenue) from sales_data_2023 ;

-- Find the top 5 costliest product
SELECT PRODUCT_NAME, MAX(unit_price) AS Price
FROM sales_data_2023
GROUP BY PRODUCT_NAME 
ORDER BY PRICE DESC 
LIMIT 5;